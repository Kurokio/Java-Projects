public class ExpCalcRecursion {
  
  String[] tokens = new String[1];
  Parse thing = new Parse();
  int result=0;
  int tempresult=0;
  int temporesult=0;
  int counter=0;
  int i;
  
  public int expCalc(String s) {
    if(s.indexOf("+") != -1) {
      String[] tokens = s.split("[+]");
      for(i=0; i<tokens.length; i++)
      {
       System.out.println("this is token["+i+"] in add: "+tokens[i]);
      }
      for(i=0; i<tokens.length; i++) {
          System.out.println("i is " +i);
          result = (result + expCalc(tokens[i]));
          System.out.println("Hi50");
          System.out.println("This is result"+i+" "+result);
      }
    }
    if(s.indexOf("-") != -1) {
      String[] tokens = s.split("[-]");
      for(i=0; i<tokens.length; i++)
      {
       System.out.println("this is token["+i+"] in sub: "+tokens[i]);
      }
      for(i=0; i<tokens.length; i++) {
          System.out.println("i is " +i);
          result = (result + expCalc(tokens[i]));
          System.out.println("Hi50");
          System.out.println("This is result"+i+" "+result);
      }
    } else {
      if(s.indexOf("*") != -1) {
        String[] tokens = s.split("[*]");
      for(i=0; i<tokens.length; i++)
      {
       System.out.println("this is token["+i+"] in multi: "+tokens[i]);
      }
      for(i=0; i<tokens.length; i++) {
          System.out.println("i is " +i);
          result = (result + expCalc(tokens[i]));
          System.out.println("Hi50");
          System.out.println("This is result"+i+" "+result);
      }
    }
    